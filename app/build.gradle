plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

apply from: file("$rootDir/libraries.gradle")
apply from: file("$rootDir/ktlint.gradle")

android {
    namespace 'com.codestracture'
    compileSdk 33

    defaultConfig {
        applicationId "com.codestracture"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'BASE_URL', "\"https://portal.courtesycarsredhill.co.uk/CCRAPI/api/\""
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings false
        // if true, check all issues, including those that are off by default
        checkAllWarnings true
        // if true, treat all warnings as errors
        warningsAsErrors true
        // turn on the given issue id's
        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // check *only* the given issue id's
        checkOnly 'NewApi', 'InlinedApi'
        // if true, don't include source code lines in the error output
        noLines true
        // if true, emit full/absolute paths to files with errors (true by default)
        absolutePaths true
    }
}

dependencies {
    implementation google.coreKtx
    implementation google.appCompat
    implementation google.googleMaterial
    implementation google.constraintlayout
    implementation google.fragmentKtx
    implementation google.gson
    implementation google.navigation_fragment_ktx
    implementation google.navigation_ui_ktx

    //Epoxy
    implementation epoxy.epoxyRecyclerView
    kapt epoxy.epoxyRecyclerViewProcessor

    //EncryptedSharedPreferences
    implementation google.encryptedPreference

    implementation google.lifecycle_extensions_viewmodel
    implementation google.lifecycle_livedata
    implementation google.lifecycle_process

    //Reactive
    implementation reactive.java
    implementation reactive.android

    //DI
    implementation google.hiltAndroid
    kapt google.hiltAndroidCompiler
    implementation google.hiltWork

    //Retrofit & OkHttp
    implementation square.retrofit
    implementation square.retrofitRxAdapter
    implementation square.okhttpLogging
    implementation square.moshi
    implementation square.moshiConverter
    kapt square.moshiCodeGen

    implementation intuit.sdp
    implementation intuit.ssp

    implementation google.locationService

    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    implementation 'com.google.androidbrowserhelper:androidbrowserhelper:2.4.0'

    implementation 'at.aau.itec.android.mediaplayer:mediaplayer:1.3.3'
    implementation 'at.aau.itec.android.mediaplayer:mediaplayer-dash:1.3.3'
    implementation 'at.aau.itec.android.mediaplayer:mediaplayer-gles:1.3.3'
}

kapt {
    correctErrorTypes true
}